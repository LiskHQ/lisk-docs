"use strict";(self.webpackChunklisk_docs=self.webpackChunklisk_docs||[]).push([[850],{1566:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=i(5893),c=i(1151);const a={title:"...with viem",slug:"/interacting-with-blockchain/viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Lisk.",keywords:["viem","Lisk","Lisk mainnet","Lisk testnet","Ethereum","smart contracts","blockchain","RPC URL","JavaScript","TypeScript"]},s="Interacting with the blockchain with viem",o={id:"building-on-lisk/interacting-with-the-blockchain/viem",title:"...with viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Lisk.",source:"@site/docs/building-on-lisk/interacting-with-the-blockchain/viem.md",sourceDirName:"building-on-lisk/interacting-with-the-blockchain",slug:"/interacting-with-blockchain/viem",permalink:"/lisk-documentation/interacting-with-blockchain/viem",draft:!1,unlisted:!1,editUrl:"https://github.com/LiskHQ/lisk-documentation/tree/main/docs/building-on-lisk/interacting-with-the-blockchain/viem.md",tags:[],version:"current",frontMatter:{title:"...with viem",slug:"/interacting-with-blockchain/viem",description:"Documentation for using Viem, a TypeScript interface for EVM-compatible blockchains. This page covers installation, setup, and various functionalities such as reading and writing blockchain data and interacting with smart contracts on Lisk.",keywords:["viem","Lisk","Lisk mainnet","Lisk testnet","Ethereum","smart contracts","blockchain","RPC URL","JavaScript","TypeScript"]},sidebar:"documentationSidebar",previous:{title:"...with ethers.js",permalink:"/lisk-documentation/building-on-lisk/interacting-with-the-blockchain/ethers"},next:{title:"Lisk L1->L2 migration guide",permalink:"/lisk-documentation/building-on-lisk/migration-guide"}},r={},l=[{value:"Install",id:"install",level:2},{value:"Setup",id:"setup",level:2},{value:"Reading data from the blockchain",id:"reading-data-from-the-blockchain",level:2},{value:"Writing data to the blockchain",id:"writing-data-to-the-blockchain",level:2},{value:"Interacting with smart contracts",id:"interacting-with-smart-contracts",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"interacting-with-the-blockchain-with-viem",children:"Interacting with the blockchain with viem"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://viem.sh/",children:"viem"})," a TypeScript interface for Ethereum that provides low-level stateless primitives for interacting with Ethereum."]}),"\n",(0,n.jsxs)(t.p,{children:["You can use viem to interact with smart contracts deployed on Lisk.\nViem provides first-class support for chains implemented on the OP stack, see ",(0,n.jsx)(t.a,{href:"https://viem.sh/op-stack",children:"here"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,n.jsx)(t.p,{children:"To install viem run the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install --save viem\n"})}),"\n",(0,n.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,n.jsxs)(t.p,{children:["Before you can start using viem, you need to setup a ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/clients/intro.html",children:"Client"})," with a desired ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/clients/intro.html",children:"Transport"})," and ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/chains/introduction",children:"Chain"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"import { createPublicClient, http, parseEther } from 'viem'\nimport { lisk } from 'viem/chains'\n \nconst client = createPublicClient({\n  chain: lisk,\n  transport: http(),\n}).extend(publicActionsL2()) \n"})}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsxs)(t.p,{children:["To use Lisk, you must specify ",(0,n.jsx)(t.code,{children:"lisk"})," as the chain when creating a Client."]}),(0,n.jsxs)(t.p,{children:["To use Lisk Sepolia (testnet), replace ",(0,n.jsx)(t.code,{children:"lisk"})," with ",(0,n.jsx)(t.code,{children:"liskSepolia"}),"."]})]}),"\n",(0,n.jsx)(t.h2,{id:"reading-data-from-the-blockchain",children:"Reading data from the blockchain"}),"\n",(0,n.jsxs)(t.p,{children:["Once you have created a client, you can use it to read and access data from Lisk using ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/actions/public/introduction.html",children:"Public Actions"})]}),"\n",(0,n.jsxs)(t.p,{children:['Public Actions are client methods that map one-to-one with a "public" Ethereum RPC method (',(0,n.jsx)(t.code,{children:"eth_blockNumber"}),", ",(0,n.jsx)(t.code,{children:"eth_getBalance"}),", etc.)"]}),"\n",(0,n.jsxs)(t.p,{children:["For example, you can use the ",(0,n.jsx)(t.code,{children:"getBlockNumber"})," client method to get the latest block:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const blockNumber = await client.getBlockNumber();\n\nconst l1Gas = await client.estimateL1Gas({ \n  account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', \n  to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8', \n  value: parseEther('1') \n}) \n"})}),"\n",(0,n.jsx)(t.h2,{id:"writing-data-to-the-blockchain",children:"Writing data to the blockchain"}),"\n",(0,n.jsxs)(t.p,{children:["In order to write data to Lisk, you need to create a Wallet client (",(0,n.jsx)(t.code,{children:"createWalletClient"}),") and specify an ",(0,n.jsx)(t.a,{href:"https://ethereum.org/en/developers/docs/accounts/",children:(0,n.jsx)(t.code,{children:"Account"})})," to use."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"import { createWalletClient, custom } from 'viem'\nimport { lisk } from 'viem/chains'\n\nconst [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n\nconst client = createWalletClient({\n  account,\n  chain: lisk,\n  transport: custom(window.ethereum)\n})\n\nclient.sendTransaction({ ... })\n"})}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsxs)(t.p,{children:["In addition to making a JSON-RPC request (",(0,n.jsx)(t.code,{children:"eth_requestAccounts"}),") to get an Account, viem provides various helper methods for creating an ",(0,n.jsx)(t.code,{children:"Account"}),", including: ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/accounts/privateKey.html",children:(0,n.jsx)(t.code,{children:"privateKeyToAccount"})}),", ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/accounts/mnemonic.html",children:(0,n.jsx)(t.code,{children:"mnemonicToAccount"})}),", and ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/accounts/hd.html",children:(0,n.jsx)(t.code,{children:"hdKeyToAccount"})}),"."]}),(0,n.jsxs)(t.p,{children:["To use Lisk Sepolia (testnet), replace ",(0,n.jsx)(t.code,{children:"lisk"})," with ",(0,n.jsx)(t.code,{children:"liskSepolia"}),"."]})]}),"\n",(0,n.jsx)(t.h2,{id:"interacting-with-smart-contracts",children:"Interacting with smart contracts"}),"\n",(0,n.jsxs)(t.p,{children:["You can use viem to interact with a smart contract on Lisk by creating a ",(0,n.jsx)(t.code,{children:"Contract"})," instance using ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/contract/getContract.html",children:(0,n.jsx)(t.code,{children:"getContract"})})," and passing it the contract ABI, contract address, and and ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/clients/public.html",children:"Public"})," and/or ",(0,n.jsx)(t.a,{href:"https://viem.sh/docs/clients/wallet.html",children:"Wallet"})," Client:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"import { getContract } from 'viem';\nimport { wagmiAbi } from './abi';\nimport { publicClient } from './client';\n\n// 1. Create contract instance\nconst contract = getContract({\n  address: 'CONTRACT_ADDRESS',\n  abi: wagmiAbi,\n  publicClient,\n});\n\n// 2. Call contract methods, listen to events, etc.\nconst result = await contract.read.totalSupply();\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"CONTRACT_ADDRESS"})," is the address of the deployed contract."]})})]})}function d(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>s});var n=i(7294);const c={},a=n.createContext(c);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);